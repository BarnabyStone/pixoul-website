AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ProjectSource:
    Type: String
    Default: "https://github.com/pixoul/pixoul-website"
    Description: "Source control URL (e.g. Github)"
  GithubOwner:
    Type: String
    Default: pixoul
  GithubRepo:
    Type: String
    Default: pixoul-website
  GithubBranch:
    Type: String
    Default: master
  DomainName:
    Type: String
    Default: "pixoulinc.com"
    MinLength: 4
    MaxLength: 253
    AllowedPattern: "[a-z0-9]+[-.a-z0-9]*(\\.[a-z][a-z]+)+"
    Description: "The base domain name for the web site (no 'www')"
    ConstraintDescription: "Provide a valid domain name using only lowercase letters, numbers, and dash (-)"
  IndexDocument:
    Type: String
    Description: "Filename to use for home page and directory path requests"
    Default: "index.html"
    ConstraintDescription: "Provide a valid index document file name"
  ErrorDocument:
    Type: String
    Description: "Filename to use for errors (e.g., not found)"
    Default: "error.html"
    ConstraintDescription: "Provide a valid error document file name"
  CodeBuildEnvironmentComputeType:
    Type: String
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
  CodeBuildImage:
    Description: The codebuild runtime image to use in the Codebuild project
    Type: String
    Default: "aws/codebuild/nodejs:8.11.0"
  PriceClass:
    Description: "Distribution price class. Default is US-only, PriceClass_All is worldwide but more expensive."
    Default: PriceClass_100
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All
    Type: String

Resources:
  # The codeBuild process that builds the production website files for S3 in CodePipeline
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${AWS::StackName}-codebuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      BadgeEnabled: true
      Artifacts:
        Type: S3
        Name: !Sub ${AWS::StackName}-codebuild
        Location: !Ref PipelineBucket
      Source:
        Type: GITHUB
        Location: !Ref ProjectSource
      Environment:
        ComputeType: !Ref CodeBuildEnvironmentComputeType
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
  # The CodePipeline that gets code from GitHub and Deploys to S3
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-codesource
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                OAuthToken: '{{resolve:secretsmanager:MyGithubSecrets:SecretString:token}}'
        - Name: Build
          Actions:
            -
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: !Sub ${AWS::StackName}-codesource
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}-codebuild
              Configuration:
                ProjectName: !Ref CodeBuild
        - Name: Deploy
          Actions:
          - Name: DeployAction
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Version: 1
              Provider: S3
            InputArtifacts:
              - Name: !Sub ${AWS::StackName}-codebuild
            Configuration:
              BucketName: !Ref DeployBucket
              Extract: true

  # Bucket for CodePipeline artifact storage: codepipeline.example.com
  PipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "codepipeline.${DomainName}"
      VersioningConfiguration:
        Status: Enabled
  # Bucket for site content: example.com
  DeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: !Ref IndexDocument
        ErrorDocument: !Ref ErrorDocument
 # Certificate for HTTPS accesss through CloudFront
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub "www.${DomainName}"
      ValidationMethod: DNS
      Tags:
        -
          Key: "Name"
          Value: !Sub ${AWS::StackName}
  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          -
            DomainName: !GetAtt DeployBucket.DomainName
            Id: !Ref DeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        PriceClass: !Ref PriceClass
        Enabled: true
        Aliases:
          - !Ref DomainName
          - !Sub 'www.${DomainName}'
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          SslSupportMethod: "sni-only"
        DefaultCacheBehavior:
          MinTTL: 86400
          MaxTTL: 31536000
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref DeployBucket
          ViewerProtocolPolicy: "redirect-to-https"
        CustomErrorResponses:
          - ErrorCode: '403'
            ResponsePagePath: "/index.html"
            ResponseCode: '200'
            ErrorCachingMinTTL: '300'
          - ErrorCode: '404'
            ResponsePagePath: "/index.html"
            ResponseCode: '200'
            ErrorCachingMinTTL: '300'
  # IAM info for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"
  # IAM info for CodePipeline
  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt DeployBucket.Arn
                  - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"
